plugins {
	id("com.github.johnrengelman.shadow")
	id("io.micronaut.library")
	id("io.micronaut.aot")
	id("maven-publish")
	id("jacoco")
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
	annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

	implementation("io.micronaut.serde:micronaut-serde-jackson")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-http-server-netty")
	implementation("io.micronaut.validation:micronaut-validation")


	// Reactor for reactive streams
	implementation("io.projectreactor:reactor-core:3.5.12")

	implementation("jakarta.annotation:jakarta.annotation-api")
	implementation("jakarta.validation:jakarta.validation-api")

	implementation("ch.qos.logback:logback-classic")

	// uses exileapi v1.0.1 - NOTE: you must use api to propagate the proto files to the other projects
	api("build.buf.gen:tcn_exileapi_grpc_java:${grpcVersion}.1.20250501194345.3318b54a20ec")

	implementation("net.java.dev.jna:jna")
	implementation("io.methvin:directory-watcher")

	implementation("com.zaxxer:HikariCP:5.1.0")

	// gRPC client dependencies only (no server)
	api("io.grpc:grpc-protobuf:${grpcVersion}")
	api("io.grpc:grpc-services:${grpcVersion}") {
		exclude group: "io.grpc", module: "grpc-health-service"
	}
	api("io.grpc:grpc-stub:${grpcVersion}")
	compileOnly("org.apache.tomcat:annotations-api:6.0.53")
	runtimeOnly("io.grpc:grpc-netty-shaded:${grpcVersion}")
	api("com.google.protobuf:protobuf-java-util:${protobufVersion}")
	api("org.bouncycastle:bcpkix-jdk18on:1.78.1")

	// Add SnakeYAML for YAML configuration support
	runtimeOnly("org.yaml:snakeyaml")

	testImplementation("io.micronaut:micronaut-http-client")
	testImplementation("org.mockito:mockito-core:5.15.2")
}

java {
	sourceCompatibility = JavaVersion.toVersion("17")
	targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false

micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("com.tcn.exile.*")
	}
	aot {
		// Please review carefully the optimizations enabled below
		// Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
		optimizeServiceLoading = false
		convertYamlToJava = false
		precomputeOperations = true
		cacheEnvironment = true
		optimizeClassLoading = true
		deduceEnvironment = true
		optimizeNetty = true
		replaceLogbackXml = true
	}
}

// Configure JaCoCo for test coverage
jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/*$Lambda$*/**',
				'**/*$$*/**',
				'**/*_Micronaut*/**',
				'**/micronaut/**'
			])
		}))
	}
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}
