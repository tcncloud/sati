/* 
 *  Copyright 2017-2024 original authors
 *  
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  
 *  https://www.apache.org/licenses/LICENSE-2.0
 *  
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package com.tcn.exile.models;

import io.micronaut.serde.annotation.Serdeable;

@Serdeable
public enum AgentState {

  AGENT_STATE_UNAVALIABLE(0),
  AGENT_STATE_IDLE(1),
  AGENT_STATE_READY(2),
  AGENT_STATE_HUNGUP(3),
  AGENT_STATE_DESTROYED(4),
  AGENT_STATE_PEERED(5),
  AGENT_STATE_PAUSED(6),
  AGENT_STATE_WRAPUP(7),
  AGENT_STATE_PREPARING_AFTER_IDLE(8),
  AGENT_STATE_PREPARING_AFTER_WRAPUP(9),
  AGENT_STATE_PREPARING_AFTER_PAUSE(10),
  AGENT_STATE_PREPARING_AFTER_DIAL_CANCEL(11),
  AGENT_STATE_PREPARING_AFTER_PBX_REJECT(12),
  AGENT_STATE_PREPARING_AFTER_PBX_HANGUP(13),
  AGENT_STATE_PREPARING_AFTER_PBX_WAS_TAKEN(14),
  AGENT_STATE_PREPARING_AFTER_GUI_BUSY(15),
  AGENT_STATE_MANUAL_DIAL_PREPARED(16),
  AGENT_STATE_PREVIEW_DIAL_PREPARED(17),
  AGENT_STATE_MANUAL_DIAL_STARTED(18),
  AGENT_STATE_PREVIEW_DIAL_STARTED(19),
  AGENT_STATE_OUTBOUND_LOCKED(20),
  AGENT_STATE_WARM_AGENT_TRANSFER_STARTED_SOURCE(21),
  AGENT_STATE_WARM_AGENT_TRANSFER_STARTED_DESTINATION(22),
  AGENT_STATE_WARM_OUTBOUND_TRANSFER_STARTED(23),
  AGENT_STATE_WARM_OUTBOUND_TRANSFER_PEER_LOST(24),
  AGENT_STATE_PBX_POPUP_LOCKED(25),
  AGENT_STATE_PEERED_WITH_CALL_ON_HOLD(26),
  AGENT_STATE_CALLBACK_RESUMING(27),
  AGENT_STATE_GUI_BUSY(28),
  AGENT_STATE_INTERCOM(29),
  AGENT_STATE_INTERCOM_RINGING_SOURCE(30),
  AGENT_STATE_INTERCOM_RINGING_DESTINATION(31),
  AGENT_STATE_WARM_OUTBOUND_TRANSFER_OUTBOUND_LOST(32),
  AGENT_STATE_PREPARED_TO_PEER(33),
  AGENT_STATE_WARM_SKILL_TRANSFER_SOURCE_PENDING(34),
  AGENT_STATE_CALLER_TRANSFER_STARTED(35),
  AGENT_STATE_CALLER_TRANSFER_LOST_PEER(36),
  AGENT_STATE_CALLER_TRANSFER_LOST_MERGED_CALLER(37),
  AGENT_STATE_COLD_OUTBOUND_TRANSFER_STARTED(38),
  AGENT_STATE_COLD_AGENT_TRANSFER_STARTED(39),
  ;

  private int value;

  AgentState(int i) {
    value = 1;
  }

  public static AgentState forNumber(int value) {
    return AgentState.values()[value];
  }

  public int getValue() {
    return value;
  }
}
