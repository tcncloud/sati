plugins {
	id("com.github.johnrengelman.shadow")
	id("io.micronaut.application")
	id("io.micronaut.aot")
}

repositories {
	mavenCentral()
}

dependencies {
	// Add Micronaut Platform BOM
	implementation(platform("io.micronaut.platform:micronaut-platform:${micronautVersion}"))

	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
	annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

	implementation("io.micronaut.serde:micronaut-serde-jackson")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-http-server-netty")
	implementation("io.micronaut.validation:micronaut-validation")
	implementation("org.bouncycastle:bcpkix-jdk18on:1.78.1")

	implementation("io.grpc:grpc-core:${grpcVersion}")
	implementation("io.grpc:grpc-protobuf:${grpcVersion}")
	implementation("io.grpc:grpc-services:${grpcVersion}")

	// Management and monitoring
	implementation("io.micronaut:micronaut-management")
	implementation("io.micronaut.micrometer:micronaut-micrometer-core")

	implementation('ch.qos.logback:logback-classic:1.5.17')
	implementation('ch.qos.logback:logback-core:1.5.17')
	implementation('org.slf4j:slf4j-api:2.0.17')

	// Import multitenant module
	implementation(project(":core"))
	implementation(project(":logback-ext"))

	// Reactor for reactive streams
	implementation("io.projectreactor:reactor-core:3.5.12")

	implementation("jakarta.annotation:jakarta.annotation-api")
	implementation("jakarta.validation:jakarta.validation-api")

	implementation("ch.qos.logback:logback-classic")

	// Add jansi for colored console logging
	implementation("org.fusesource.jansi:jansi:2.4.1")

	// Add directory watcher dependency
	implementation("io.methvin:directory-watcher")

	// Add snakeyaml for YAML configuration parsing
	runtimeOnly("org.yaml:snakeyaml")

	// Add Micronaut OpenAPI and Swagger UI support
	implementation("io.micronaut.openapi:micronaut-openapi")

	testImplementation("io.micronaut:micronaut-http-client")
	testImplementation("org.mockito:mockito-core:5.15.2")

	developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-management")
	developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-ui")
}

application {
	mainClass.set("com.tcn.exile.demo.single.Application")
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.compilerArgs += [
		"-Amicronaut.openapi.views.spec=swagger-ui.enabled=true"
	]
	options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation"]
}

tasks.withType(Test) {
	useJUnitPlatform()
}

micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("com.tcn.*")
	}
	aot {
		optimizeServiceLoading = false
		convertYamlToJava = false
		precomputeOperations = true
		cacheEnvironment = true
		optimizeClassLoading = true
		deduceEnvironment = true
		optimizeNetty = true
		replaceLogbackXml = true
	}
}

jar {
	manifest {
		attributes 'Implementation-Version': project.version
	}
}
