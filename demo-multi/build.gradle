plugins {
    id("com.github.johnrengelman.shadow")
    id("io.micronaut.application")
    id("io.micronaut.aot")
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut.validation:micronaut-validation")
    
    // Management and monitoring
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    
    // Import multitenant module
    implementation(project(":core"))
    
    // Reactor for reactive streams
    implementation("io.projectreactor:reactor-core:3.5.12")
    
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("jakarta.validation:jakarta.validation-api")
    
    implementation("ch.qos.logback:logback-classic")
    
    // Add jansi for colored console logging
    implementation("org.fusesource.jansi:jansi:2.4.1")
    
    // Add directory watcher dependency
    implementation("io.methvin:directory-watcher")
    
    // Add snakeyaml for YAML configuration parsing
    runtimeOnly("org.yaml:snakeyaml")
    
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.mockito:mockito-core:5.15.2")

    developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-management")
    developmentOnly("io.micronaut.controlpanel:micronaut-control-panel-ui")
}

application {
    mainClass.set("com.tcn.exile.multi.MultitenantApplication")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.tcn.exile.*")
        annotations("com.tcn.exile.multi.*")
        annotations("com.tcn.exile.multi.config.*")
    }
    aot {
        // Disable AOT optimizations that are causing build errors
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = false
        cacheEnvironment = false
        optimizeClassLoading = false
        deduceEnvironment = false
        optimizeNetty = false
        replaceLogbackXml = false
    }
} 