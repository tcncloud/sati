syntax = "proto3";

package tcnapi.exile.station.v2;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "tcnapi/exile/core/v2/entities.proto";

service StationApi {
  rpc ListPools(ListPoolsRequest) returns (stream ListPoolsResponse);
  rpc GetPoolStatus(GetPoolStatusRequest) returns (GetPoolStatusResponse);
  rpc GetPoolRecords(GetPoolRecordsRequest) returns (stream GetPoolRecordsResponse);
  rpc SearchRecords(SearchRecordsRequest) returns (SearchRecordsResponse);
  rpc GetRecordFields(GetRecordFieldsRequest) returns (GetRecordFieldsResponse);
  rpc SetRecordFields(SetRecordFieldsRequest) returns (SetRecordFieldsResponse);

  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);
  rpc PopAccount(PopAccountRequest) returns (PopAccountResponse);

  rpc SendAgentCall(SendAgentCallRequest) returns (SendAgentCallResponse);
  rpc SendTelephonyResults(SendTelephonyResultsRequest) returns (SendTelephonyResultsResponse);
  rpc SendAgentResponse(SendAgentResponseRequest) returns (SendAgentResponseResponse);
  rpc Info(InfoRequest) returns (InfoResponse);
  rpc Seppuku(SeppukuRequest) returns (SeppukuResponse);
  rpc Log(LogRequest) returns (LogResponse);
}

message ListPoolsRequest {
  string org_id = 1;
}

message ListPoolsResponse {
  tcnapi.exile.core.v2.Pool pool = 1;
}

message GetPoolStatusRequest {
  string org_id = 1;
  string pool_id = 2;
}

message GetPoolStatusResponse {
  tcnapi.exile.core.v2.Pool pool = 1;
}

message GetPoolRecordsRequest {
  string org_id = 1;
  string pool_id = 2;
  // optional: used to provide data_link record in exiledb
  google.protobuf.StringValue call_sid = 20;
  google.protobuf.StringValue call_type = 21;
}

message GetPoolRecordsResponse {
  tcnapi.exile.core.v2.Record record = 1;
}

message SearchRecordsRequest {
  string org_id = 1;
  string aip160_filter = 2;
  // TBD
}

message SearchRecordsResponse {
  repeated tcnapi.exile.core.v2.Record records = 1;
}

message GetRecordFieldsRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  repeated string field_names = 4;
  // optional: used to provide data_link record in exiledb
  google.protobuf.StringValue call_sid = 20;
  google.protobuf.StringValue call_type = 21;
}

message GetRecordFieldsResponse {
  repeated tcnapi.exile.core.v2.Field fields = 1;
}

message SetRecordFieldsRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  repeated tcnapi.exile.core.v2.Field fields = 4;
  // optional: used to provide data_link record in exiledb
  google.protobuf.StringValue call_sid = 20;
  google.protobuf.StringValue call_type = 21;
}

message SetRecordFieldsResponse {
  // TBD
}

message CreatePaymentRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  string payment_id = 4;
  string payment_type = 5;
  string payment_amount = 6;
  google.protobuf.Timestamp payment_date = 7;
  // optional: used to provide data_link record in exiledb
  google.protobuf.StringValue call_sid = 20;
  google.protobuf.StringValue call_type = 21;
}

message CreatePaymentResponse {
  // TBD
}

message PopAccountRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  string call_sid = 4;
  string call_type = 5;
}

message PopAccountResponse {
  // TBD
}

message SendAgentCallRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  string agent_id = 4;
  string call_sid = 5;
  string call_type = 6;
  // TBD
}

message SendAgentCallResponse {
  // TBD
}

message SendTelephonyResultsRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  string call_sid = 4;
  string call_type = 5;
  // TBD
}

message SendTelephonyResultsResponse {
  // TBD
}

message SendAgentResponseRequest {
  string org_id = 1;
  string pool_id = 2;
  string record_id = 3;
  string agent_id = 4;
  string call_sid = 5;
  string call_type = 6;
  // TBD
}

message SendAgentResponseResponse {
  // TBD
}

message InfoRequest {
  string org_id = 1;
}
message InfoResponse {}

message SeppukuRequest {
  string org_id = 1;
}
message SeppukuResponse {}

message LogRequest {
  string org_id = 1;
}
message LogResponse {}
